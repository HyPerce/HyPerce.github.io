<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机的层次与编程语言</title>
    <link href="/2021/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%B1%82%E6%AC%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    <url>/2021/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%B1%82%E6%AC%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机的翻译和解释"><a href="#计算机的翻译和解释" class="headerlink" title="计算机的翻译和解释"></a>计算机的翻译和解释</h1><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>人类语言与计算机语言不同。计算机只能识别010111….这样的比特位，无法识别人类的语言。所以需要进行语言之间的转换。</p><h2 id="翻译与解释的区别"><a href="#翻译与解释的区别" class="headerlink" title="翻译与解释的区别"></a>翻译与解释的区别</h2><h3 id="程序翻译"><a href="#程序翻译" class="headerlink" title="程序翻译"></a>程序翻译</h3><p>用较为高级的计算机语言L1进行程序的逻辑描述（通俗的说写一个程序），然后通过编译器生成一个较为低级的计算机语言L0，L0能被计算机直接读取并执行。这个由L1生成L0的过程称为程序翻译。例如C\C++、Object-C、Golang</p><pre><code class=" mermaid">graph TDa(较高级语言L1) --编译器  --&gt;c(较低级语言L0)c --&gt;b(计算机执行)</code></pre><h3 id="程序解释"><a href="#程序解释" class="headerlink" title="程序解释"></a>程序解释</h3><p>用较为高级的计算机语言L1进行程序的逻辑描述，将L1作为输入经过一个由较为低级的计算机语言L0所编写的程序（解释器），输出L0语言，再被计算机读取并执行。例如Python、Php、Javascript</p><pre><code class=" mermaid">graph TDa(输入较为高级的计算机语言L1)--解释器--&gt;b(输出较为低级的计算机语言L0)b--&gt;c(计算机执行)</code></pre><ul><li><p>计算机执行的指令都是L0</p></li><li><p>翻译过程生成新的L0程序，解释过程不生成新的L0程序、</p></li><li><p>解释过程由L0编写的解释器去解释L1程序</p></li></ul><p>还存在一些语言属于翻译+解释，例如Java、C#</p><p>拿Java举例</p><pre><code class=" mermaid">graph LRa(Java程序)--编译--&gt;b(JVM字节码)--解释--&gt;c(机器码)              d(在JVM虚拟机上层)</code></pre><h1 id="计算机的层次"><a href="#计算机的层次" class="headerlink" title="计算机的层次"></a>计算机的层次</h1><pre><code class=" mermaid">graph LRa(应用层)b(高级语言层)c(汇编语言层)d(操作系统层)e(传统机器层)f(微程序机器层)g(硬件逻辑层)</code></pre><p>其中下三层称为实际机器，上四层称为虚拟机器，在虚拟机中，第一层位应用软件，下面三层称为软件系统</p><h2 id="硬件逻辑层"><a href="#硬件逻辑层" class="headerlink" title="硬件逻辑层"></a>硬件逻辑层</h2><ul><li>门电路、触发器等逻辑电路组成</li><li>属于电子工程的领域</li></ul><h2 id="微程序机器层"><a href="#微程序机器层" class="headerlink" title="微程序机器层"></a>微程序机器层</h2><ul><li>编程语言是微指令集</li><li>微指令所组成的微程序直接交由硬件执行</li><li>一般是硬件公司所了解的，由硬件程序员编写指令</li></ul><h2 id="传统机器层"><a href="#传统机器层" class="headerlink" title="传统机器层"></a>传统机器层</h2><ul><li>编程语言是CPU指令集（机器指令）储存在CPU中</li><li>编程语言和硬件直接相关，可以直接被机器识别执行</li><li>不同架构的CPU，CPU指令集不同</li></ul><p>在实际机器层，一般一个机器指令对应一个微程序，一个微程序对应一组微指令。</p><pre><code class=" mermaid">graph TDa(微指令&lt;微程序&#x3D;机器指令)</code></pre><h2 id="操作系统层"><a href="#操作系统层" class="headerlink" title="操作系统层"></a>操作系统层</h2><ul><li>向上提供简易的操作界面</li><li>向下对接了指令系统，管理硬件资源</li><li>位于软件和硬件之间的</li></ul><h2 id="汇编语言层"><a href="#汇编语言层" class="headerlink" title="汇编语言层"></a>汇编语言层</h2><ul><li>编程语言是汇编语言</li><li>汇编语言可以翻译成可直接执行的机器语言</li><li>翻译过程的程序是汇编器</li></ul><h2 id="高级语言层"><a href="#高级语言层" class="headerlink" title="高级语言层"></a>高级语言层</h2><ul><li>高级语言层</li><li>有上百种的高级语言</li></ul><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>面向具体问题的而专门设计的应用</p><p><strong>计算机的分层是为了便于理解计算机的结构层次，并不是一成不变的</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机体系与结构</title>
    <link href="/2021/04/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E4%B8%8E%E7%BB%93%E6%9E%84/"/>
    <url>/2021/04/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E4%B8%8E%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="冯诺依曼体系"><a href="#冯诺依曼体系" class="headerlink" title="冯诺依曼体系"></a>冯诺依曼体系</h1><p> <u>将程序指令和数据一起存储的计算机设计概念结构</u></p><h2 id="体系的提出"><a href="#体系的提出" class="headerlink" title="体系的提出"></a>体系的提出</h2><p>早期计算机的使用仅含固定用途，一台计算机只能有一个功能。要想将计算机多用的话，需要重新改变程序更改结构，重新设计电路，很明显这样十分不便。这时，冯诺依曼提出一个想法：把程序存储起来，设计一个通用的电路。当我们使用某一个程序时，计算机先将存储的程序指令翻译成电路语言给通用电路，通用电路就能执行相关逻辑，这样一个计算机可以存储多个程序，也就可以同时处理多个问题。于是，由冯诺依曼体系衍生出的存储型计算机改变了之前计算机糟糕的局面。将指令看作特殊类型的静态数据储存，一台计算机便可以轻易改变程序，改变程序内容，无需再重新更改结构设计电路。由冯诺依曼体系可以知道，存储型计算机需要至少五个部分：存储器、运算器、控制器、输入设备、输出设备。现代计算机都是冯诺依曼机</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>能够把需要的程序和数据送到计算机中</p><p>能够长期记忆程序、数据、中间结果及最终运算结果的能力</p><p>具备算数、逻辑运算和数据传送等数据加工能力</p><p>能够按照要求将处理结果输出给用户</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><h3 id="早期冯诺依曼计算机"><a href="#早期冯诺依曼计算机" class="headerlink" title="早期冯诺依曼计算机"></a>早期冯诺依曼计算机</h3><p><img src="https://tse1-mm.cn.bing.net/th/id/OIP.6CSr6bS73OGqOPdN1eg24wHaDZ?w=331&h=160&c=7&o=5&pid=1.7" alt="冯诺依曼结构CPU示意图 的图像结果"></p><h3 id="冯诺依曼瓶颈"><a href="#冯诺依曼瓶颈" class="headerlink" title="冯诺依曼瓶颈"></a>冯诺依曼瓶颈</h3><p> 早期冯诺依曼计算机将存储器和CPU分开，导致了CPU和存储器之间的问题无法调和。CPU的处理速率超过存储器传递速率过多，CPU经常空转等待数据，使得CPU的算力极大的被浪费</p><p><img src="https://tse1-mm.cn.bing.net/th/id/OIP.rLX2-st-02zvrMI8XjaY1QHaDd?w=319&h=163&c=7&o=5&pid=1.7" alt="冯诺依曼结构CPU示意图 的图像结果"></p><h1 id="现代计算机的结构"><a href="#现代计算机的结构" class="headerlink" title="现代计算机的结构"></a>现代计算机的结构</h1><p>本质讲还是冯诺伊曼结构，实在冯诺依曼结构的基础上进行修改，目的是为了解决CPU与存储设备之间的性能差异问题。</p><p><img src="https://tse2-mm.cn.bing.net/th/id/OIP.NK1f2Ts1Leq4XMRY5wsMcAHaDn?w=346&h=170&c=7&o=5&pid=1.7" alt="冯诺依曼结构CPU示意图 的图像结果"></p><h2 id="主要问题：存储器"><a href="#主要问题：存储器" class="headerlink" title="主要问题：存储器"></a>主要问题：存储器</h2><p> 广义上的存储器包括磁带和硬盘，而我们在围绕CPU说的存储器的更高速的设备包括CPU的寄存器和计算机里的内存</p><p>现代计算机的结构可以说时以寄存器为核心的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机的分类</title>
    <link href="/2021/04/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%88%86%E7%B1%BB/"/>
    <url>/2021/04/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="超级计算机"><a href="#超级计算机" class="headerlink" title="超级计算机"></a>超级计算机</h1><p>功能最强，运算速度最快，储存容量最大的计算机</p><p>多用于国家高科技领域和尖端技术研究</p><p>标记它们的运算速度的单位是TFlop/s</p><p><u>1TFlop/s=每秒一万亿次浮点计算</u></p><h1 id="大型计算机"><a href="#大型计算机" class="headerlink" title="大型计算机"></a>大型计算机</h1><p>又称大型计算机，大型主机，主机等</p><p>具有高性能，可处理大量数据和复杂的运算</p><p>在大型市场中，IBM具有很大份额（Cobol编程语言）</p><h2 id="IBM-Z9"><a href="#IBM-Z9" class="headerlink" title="IBM Z9"></a>IBM Z9</h2><p>NASA最后一台大型机，使用的是Red Hat Enterprise Linux，造价昂贵</p><h2 id="去“IOE”行动"><a href="#去“IOE”行动" class="headerlink" title="去“IOE”行动"></a>去“IOE”行动</h2><p>I（IBM）：  服务器提供商</p><p>O（Oracle）：数据库软件提供商</p><p>E（EMC）：存储设备提供商</p><p>这三者构成了从软件到硬件的企业数据库系统。这个系统在当时几乎占领了全球商业数据库系统的所有份额。不仅像阿里巴巴这样需要大量运算的企业使用这套系统，像石油、金融等行业也在使用。</p><p>而去“IOE”行动是阿里巴巴提出的概念，因为这套系统是一套高成本、高维护费的储存系统。要知道仅仅是Oracle数据库的三年销售金额就达到了八位数。而当时的阿里巴巴用户正在大量增长，阿里每年升级维护的费用也是快速升高，在这个情况下，去”IOE“行动应运而生。同时，这套系统也非完美无缺。这套系统集中式的结构使得它所提供的服务不够灵活，伸缩性弱。阿里为了减少对大型机的依赖，增强阿里服务的灵活性，将数据从集中式的Oracle，迁移到了分布式的MySQL集群，从纵向扩展到水平扩展，解决了数据库伸缩性的问题，用普通服务器代替了大型机。</p><p>2008年阿里提出去”IOE“，2009年阿里云成立。</p><h1 id="迷你计算机（服务器）"><a href="#迷你计算机（服务器）" class="headerlink" title="迷你计算机（服务器）"></a>迷你计算机（服务器）</h1><p>又称小型机，普通服务器。</p><p>不需要特殊的空调场所</p><p>具备不错的算力，可以完成较复杂的运算。</p><p>目前普通服务器已经代替了传统的大型机，成为大规模企业计算的中枢。各大企业也是使用普通服务器器构成自己的云服务，数据中心的。</p><h1 id="工作站"><a href="#工作站" class="headerlink" title="工作站"></a>工作站</h1><p>高端的通用微型计算机，提供比个人计算机更强大的性能。</p><p>比普通计算机体积较大，性能更强</p><h1 id="微型计算机"><a href="#微型计算机" class="headerlink" title="微型计算机"></a>微型计算机</h1><p>又称个人计算机，又分：台式机、笔记本、一体机</p><p>从构成本质讲，个人计算机和前面所有计算机没有本质的区别</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机发展历史</title>
    <link href="/2021/04/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/"/>
    <url>/2021/04/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机发展的四个阶段"><a href="#计算机发展的四个阶段" class="headerlink" title="计算机发展的四个阶段"></a>计算机发展的四个阶段</h1><h2 id="1946-1957-电子管计算机"><a href="#1946-1957-电子管计算机" class="headerlink" title="1946-1957 电子管计算机"></a>1946-1957 电子管计算机</h2><h3 id="电子管计算机的背景"><a href="#电子管计算机的背景" class="headerlink" title="电子管计算机的背景"></a>电子管计算机的背景</h3><p><img src="https://s.cn.bing.net/th?id=OIP.QvuMyon6j7x5sgjB1j3kVAHaF2&w=200&h=220&c=7&qlt=90&bgcl=ececec&pid=PersonalBing" alt="img"></p><p>在第二次世界大战早期，为了对抗德国海军，英国截获了德国海军的无线电波。但该电波被加密。英国为了破解德国海军的密文，设计了全世界第一台电子管计算机。</p><h3 id="埃尼阿克（ENIAC）"><a href="#埃尼阿克（ENIAC）" class="headerlink" title="埃尼阿克（ENIAC）"></a>埃尼阿克（ENIAC）</h3><p><img src="https://th.bing.com/th/id/R53f1c4ca74cce31b5ec98e74838ae640?rik=kJfls9hosMYHeA&riu=http://storage.service.mix.sina.com.cn/fa06b7b8f1585467f4702e073b80a58b&ehk=KPojyp9fDvJE/fxFaa1oQALVHkPmOCJ2ERzRr+RCqaE=&risl=&pid=ImgRaw" alt="查看源图像"></p><p>最著名的电子管计算机</p><p>在战争中使用飞机火箭炮弹，都需要精确的飞行射击参数。最开始是需要人工进行高达几千次的运算。美国为了更加精确的数据结果，更加短暂的计算时间，召集科学家研发了埃尼阿克。</p><p>埃尼阿克受限于电子管的体积，本身十分庞大。它长30.48米，宽6米，高2.4米，占地面积约170平方米，30个操作台，重达30英吨，耗电量150千瓦，造价48万美元。它包含了17,468根真空管（电子管）7,200根晶体<a href="https://baike.baidu.com/item/%E4%BA%8C%E6%9E%81%E7%AE%A1">二极管</a>，1,500 个中转，70,000个<a href="https://baike.baidu.com/item/%E7%94%B5%E9%98%BB%E5%99%A8">电阻器</a>，10,000个电容器，1500个继电器，6000多个开关。</p><p>但即使埃尼阿克体积庞大，功耗很高，造价高昂，它的效果还是达到了目标。它计算速度是每秒5000次加法或400次乘法，是使用继电器运转的机电式计算机的1000倍、手工计算的20万倍。</p><h3 id="电子管计算机的特点"><a href="#电子管计算机的特点" class="headerlink" title="电子管计算机的特点"></a>电子管计算机的特点</h3><p>集成度小，占用空间大</p><p>功耗高，运行速度慢（相对于现在）</p><p>操作复杂，更换程序需要重新接线</p><h2 id="1957-1964-晶体管计算机"><a href="#1957-1964-晶体管计算机" class="headerlink" title="1957-1964 晶体管计算机"></a>1957-1964 晶体管计算机</h2><h3 id="晶体管计算机由来"><a href="#晶体管计算机由来" class="headerlink" title="晶体管计算机由来"></a>晶体管计算机由来</h3><p><img src="https://tse4-mm.cn.bing.net/th/id/OIP.NZM0jBMbnSsTN2PqzjQCCAHaFK?w=191&h=147&c=7&o=5&pid=1.7" alt="晶体管 的图像结果"></p><p>贝尔实验室的三个科学家发明了晶体管。相比于电子管，晶体管有更小的体积，更小的功耗，更高的计算效率。于是晶体管被应用到计算机上，造成了计算机的一次革命。在二十世纪五十年代末，电子管就几乎被淘汰。直到现在，在许多电路里面也能看到晶体管。为了表彰晶体管这一跨时代的贡献，1956年诺贝尔物理学奖授予了贝尔实验室发明晶体管的三个科学家。</p><h3 id="PDP-1"><a href="#PDP-1" class="headerlink" title="PDP-1"></a>PDP-1</h3><p><img src="https://tse1-mm.cn.bing.net/th/id/OIP.jmF0myCC3ipppVVZzoR7NwHaF9?w=216&h=180&c=7&o=5&pid=1.7" alt="PDP-1 的图像结果"></p><p>是世界上第一个商用小型计算机，拥有4096个18位字节内存，每秒200000指令，配备了512x512显示器。在PDP-1之上，史帝芬·罗素（Steve Russell）开发出史上第一个电脑游戏–space war（空间战争）。</p><h3 id="晶体管计算机特点"><a href="#晶体管计算机特点" class="headerlink" title="晶体管计算机特点"></a>晶体管计算机特点</h3><p>集成度相对较高，空间占用相对较小</p><p>功耗相对较低，运行速度较快</p><p>操作相对简单，交互更加方便</p><h2 id="1964-1980-集成电路计算机"><a href="#1964-1980-集成电路计算机" class="headerlink" title="1964-1980 集成电路计算机"></a>1964-1980 集成电路计算机</h2><p>德州仪器工程师发明了集成电路（IC），将三种电子元器件集合在一个硅片上。之后越来越多的电子元器件被集合在了硅片上。</p><p><img src="https://tse4-mm.cn.bing.net/th/id/OIP.o6nzn8oh4TPVWCfRvI3LswHaFV?w=231&h=180&c=7&o=5&pid=1.7" alt="集成电路计算机 的图像结果"></p><h3 id="集成电路计算机特点"><a href="#集成电路计算机特点" class="headerlink" title="集成电路计算机特点"></a>集成电路计算机特点</h3><p>更小，功耗更低，速度更快</p><p>具备了进入日常生活的条件</p><p>具备了操作系统</p><h3 id="操作系统的诞生"><a href="#操作系统的诞生" class="headerlink" title="操作系统的诞生"></a>操作系统的诞生</h3><p>IBM公司作为计算机公司的领头羊，旗下的两款计算机：7094，1401，卖的非常好。但这两个计算机存在一个缺点，在一种型号计算机上编写的程序，在另一款计算机上无法运行。当时许多公司都购买了两种型号的计算机，大家都不愿意投入两组员工在两款计算机上编写相似的程序。IBM为了解决这个问题，推出了兼容产品 System/360。System/360就是操作系统的雏形了。从此，不同电子元器件，不同电路的计算机能在相同的操作系统上面运行。</p><h2 id="1980-现在-超大规模集成电路计算机"><a href="#1980-现在-超大规模集成电路计算机" class="headerlink" title="1980-现在  超大规模集成电路计算机"></a>1980-现在  超大规模集成电路计算机</h2><p><img src="https://tse3-mm.cn.bing.net/th/id/OIP.jdIL7TOpEkNmC2jpu6EtYgHaEQ?w=298&h=180&c=7&o=5&pid=1.7" alt="rog电脑 的图像结果"></p><h3 id="超大规模集成电路计算机特点"><a href="#超大规模集成电路计算机特点" class="headerlink" title="超大规模集成电路计算机特点"></a>超大规模集成电路计算机特点</h3><p>一个芯片上集成了上百万的晶体管</p><p>速度更快，体积更小</p><p>用途更加丰富</p><h1 id="微型计算机的发展历史"><a href="#微型计算机的发展历史" class="headerlink" title="微型计算机的发展历史"></a>微型计算机的发展历史</h1><p>从集成电路计算机阶段开始发展</p><h2 id="单核CPU时期"><a href="#单核CPU时期" class="headerlink" title="单核CPU时期"></a>单核CPU时期</h2><p>受限于性能，早期都是使用单核CPU</p><p>1971-1973：500KHz频率的微型计算机（字长8位）</p><p>1973-1978：高于1MHz频率的微型计算机（字长8位）</p><p>1978-1985：500MHz频率的微型计算机（字节16位）</p><p>1985-2000：高于1GHz频率的微型计算机（字节32位）</p><p>2000-目前：高于2GHz频率的微型计算机（字节64位）</p><h3 id="摩尔定律"><a href="#摩尔定律" class="headerlink" title="摩尔定律"></a>摩尔定律</h3><p>集成电路的性能，每18-24个月就会提升一倍。摩尔定律在20世纪还十分有效，但到了21世纪，开始逐渐失效。原因在于，随着芯片发展，芯片里面的电路越来越多，越来越复杂，热损耗越来越高，而人类目前没有解决的有效方法，导致芯片的性能无法再像之前一样快速提升，进入瓶颈期。于是人类开始组装多核CPU。</p><h2 id="多核CUP时期"><a href="#多核CUP时期" class="headerlink" title="多核CUP时期"></a>多核CUP时期</h2><p>2005：Intel奔腾系列双核CPU、AMD速龙系列</p><p>2006：Intel酷睿四核CPU</p><p>Intel酷睿十六核CPU</p><p>Intel至强系列五十六核CPU</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
